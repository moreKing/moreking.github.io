import{_ as a,c as i,ai as n,o as e}from"./chunks/framework.DcWFUpHS.js";const u=JSON.parse('{"title":"linux 网卡排序","description":"","frontmatter":{},"headers":[],"relativePath":"linux/Linux-network.md","filePath":"linux/Linux-network.md","lastUpdated":1742718866000}'),t={name:"linux/Linux-network.md"};function l(p,s,r,h,d,k){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="linux-网卡排序" tabindex="-1">linux 网卡排序 <a class="header-anchor" href="#linux-网卡排序" aria-label="Permalink to &quot;linux 网卡排序&quot;">​</a></h1><p>本文介绍如何修改Linux网卡名称以及如何进行排序</p><p>修改<code>/etc/udev/rules.d/</code>目录下的rule文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@node01 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# cd /etc/udev/rules.d/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@node01 rules.d]# ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">70-persistent-ipoib.rules</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@node01 rules.d]#</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>内置填写示例，我们仅需新增一行，按格式填写我们希望顺序，名称即可，其他保持默认即可</p><ul><li><code>ATTR{address}</code> :写明确的<code>MAC</code> ，所有mac地址字母必须小写</li><li><code>NAME</code>: 网卡名称 不超过16个字符</li><li><code>ATTR{type}</code> 1 物理网卡 详细类型请查看 <a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/include/uapi/linux/if_arp.h?h=linux-4.14.y#n27" target="_blank" rel="noreferrer">接口协议类型</a></li></ul><p>编辑 <code>70-persistent-ipoib.rules</code> 文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This is a sample udev rules file that demonstrates how to get udev to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># set the name of IPoIB interfaces to whatever you wish.  There is a</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 16 character limit on network device names.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Important items to note: ATTR{type}==&quot;32&quot; is IPoIB interfaces, and the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ATTR{address} match must start with ?* and only reference the last 8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># bytes of the address or else the address might not match the variable QPN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># portion.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Modern udev is case sensitive and all addresses need to be in lower case.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, DRIVERS==&quot;?*&quot;, ATTR{type}==&quot;32&quot;, ATTR{address}==&quot;?*00:02:c9:03:00:31:78:f2&quot;, NAME=&quot;mlx4_ib3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ACTION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=&quot;add&quot;,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SUBSYSTEM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=&quot;net&quot;,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DRIVERS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=&quot;?*&quot;,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ATTR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}==</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;1&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ATTR{address}==&quot;00:02:c9:03:00:31:78:f2&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NAME=&quot;eth0&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>重启设备生效</strong></p>`,9)]))}const c=a(t,[["render",l]]);export{u as __pageData,c as default};
